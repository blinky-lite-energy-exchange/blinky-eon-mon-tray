[
    {
        "id": "ced4605f7f43ccc7",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "19d43f82e9d7b24c",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6ac7997fd43294c1",
        "type": "group",
        "z": "ced4605f7f43ccc7",
        "name": "Edit Me",
        "style": {
            "fill": "#9363b7",
            "label": true,
            "label-position": "n",
            "color": "#ffff00",
            "stroke": "#001f60"
        },
        "nodes": [
            "73cc1daeb7f5cd49"
        ],
        "x": 1034,
        "y": 19,
        "w": 172,
        "h": 82
    },
    {
        "id": "2d343c91aee43564",
        "type": "group",
        "z": "ced4605f7f43ccc7",
        "name": "Edit Me",
        "style": {
            "stroke": "#000000",
            "fill": "#9363b7",
            "label": true,
            "label-position": "n",
            "color": "#ffff00"
        },
        "nodes": [
            "071e8c2c6b73ea9c"
        ],
        "x": 574,
        "y": 599,
        "w": 232,
        "h": 82
    },
    {
        "id": "24510592c5eccdb9",
        "type": "group",
        "z": "ced4605f7f43ccc7",
        "name": "Edit Me",
        "style": {
            "stroke": "#001f60",
            "fill": "#9363b7",
            "label": true,
            "label-position": "n",
            "color": "#ffff00"
        },
        "nodes": [
            "b9ebdfaf96e02c46"
        ],
        "x": 134,
        "y": 331.5,
        "w": 212,
        "h": 97
    },
    {
        "id": "6ad7c930.1a06b8",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            }
        },
        "site": {
            "name": "Blinky-Lite-Tutorial",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "cf9f84d0.6fba78",
        "type": "mqtt-broker",
        "name": "MQTT Broker",
        "broker": "$(MQTTSERVERIP)",
        "port": "1883",
        "clientid": "$(MQTTCLIENTID)",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "4381096bc94740bd",
        "type": "serial-port",
        "serialport": "$(SERIALPORT)",
        "serialbaud": "19200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "$(SERIALBUFSIZE)",
        "bin": "bin",
        "out": "count",
        "addchar": "",
        "responsetimeout": "2000"
    },
    {
        "id": "81a6486d2829db95",
        "type": "function",
        "z": "ced4605f7f43ccc7",
        "name": "Save tray config in Memory",
        "func": "global.set('settingInProgress', true);\nglobal.set('tray', msg.payload);\nglobal.set('deviceInit', 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 60,
        "wires": [
            [
                "73cc1daeb7f5cd49"
            ]
        ]
    },
    {
        "id": "aacb5ad0f9ae9f0c",
        "type": "mqtt in",
        "z": "ced4605f7f43ccc7",
        "name": "Subscribe Settings",
        "topic": "$(MQTTSUBSCRIBE)",
        "qos": "0",
        "datatype": "auto",
        "broker": "cf9f84d0.6fba78",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 170,
        "y": 200,
        "wires": [
            [
                "16d5707c813f41a6"
            ]
        ]
    },
    {
        "id": "12059d068d747e5e",
        "type": "inject",
        "z": "ced4605f7f43ccc7",
        "name": "read Tray",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "readTraydesc",
        "payload": "MQTTSUBSCRIBE",
        "payloadType": "env",
        "x": 160,
        "y": 60,
        "wires": [
            [
                "031e2ad34665cd8d"
            ]
        ]
    },
    {
        "id": "349bdf15f4a0269e",
        "type": "file in",
        "z": "ced4605f7f43ccc7",
        "name": "Read tray config",
        "filename": "tray.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 520,
        "y": 60,
        "wires": [
            [
                "1d5b8b1627a6edc4"
            ]
        ]
    },
    {
        "id": "1d5b8b1627a6edc4",
        "type": "json",
        "z": "ced4605f7f43ccc7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 690,
        "y": 60,
        "wires": [
            [
                "81a6486d2829db95"
            ]
        ]
    },
    {
        "id": "031e2ad34665cd8d",
        "type": "function",
        "z": "ced4605f7f43ccc7",
        "name": "Init flow Variables",
        "func": "var mqttSplit = msg.payload.split('/');\nvar trayProps = {\n    box         :   mqttSplit[0],\n    type        :   mqttSplit[1],\n    name        :   mqttSplit[2],\n};\nglobal.set('trayProps',trayProps);\nglobal.set('settingInProgress', false);\n\nreturn {topic: 'readFile', payload:true};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 60,
        "wires": [
            [
                "349bdf15f4a0269e"
            ]
        ]
    },
    {
        "id": "59777a71f4e8b863",
        "type": "file",
        "z": "ced4605f7f43ccc7",
        "name": "Init Settings",
        "filename": "tray.json",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1330,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "0de98d6dbdf192c6",
        "type": "function",
        "z": "ced4605f7f43ccc7",
        "name": "Save Settings to File",
        "func": "var jsonPretty = JSON.stringify(global.get('tray'),null,2);\nreturn {topic: msg.payload, payload:jsonPretty};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 420,
        "wires": [
            [
                "59777a71f4e8b863"
            ]
        ]
    },
    {
        "id": "16d5707c813f41a6",
        "type": "json",
        "z": "ced4605f7f43ccc7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 350,
        "y": 200,
        "wires": [
            [
                "52ad908f43787cc1"
            ]
        ]
    },
    {
        "id": "ae57cbb2461ea482",
        "type": "exec",
        "z": "ced4605f7f43ccc7",
        "command": "pm2 restart ",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Restart",
        "x": 740,
        "y": 1240,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "9d35ab1928ca82ad",
        "type": "switch",
        "z": "ced4605f7f43ccc7",
        "name": "Reset Tray",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 1260,
        "wires": [
            [
                "b68a53a1df8d8118"
            ],
            [
                "e08ea716d1539dc2"
            ]
        ]
    },
    {
        "id": "e08ea716d1539dc2",
        "type": "exec",
        "z": "ced4605f7f43ccc7",
        "command": "sudo reboot",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Reboot",
        "x": 540,
        "y": 1300,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "23883ac6e5fe4535",
        "type": "delay",
        "z": "ced4605f7f43ccc7",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 200,
        "y": 1260,
        "wires": [
            [
                "9d35ab1928ca82ad"
            ]
        ]
    },
    {
        "id": "b95d89a21dc54825",
        "type": "mqtt out",
        "z": "ced4605f7f43ccc7",
        "name": "Publish Readings",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "cf9f84d0.6fba78",
        "x": 1290,
        "y": 340,
        "wires": []
    },
    {
        "id": "8567c54a7e8bed3d",
        "type": "function",
        "z": "ced4605f7f43ccc7",
        "name": "Readings Alarm Scan",
        "func": "var newData = msg.payload;\nvar tray = global.get('tray');\nvar alarmFlagReading = scalarAlarmScan(tray, 'reading');\nvar alarmFlagSetting = scalarAlarmScan(tray, 'setting');\nvar newMsg   = null;\nvar alarmMsg = null;\nvar newSettingMsg = null;\nif (alarmFlagReading || alarmFlagSetting)\n{\n    alarmMsg = \n    {\n        topic: 'alarm',\n        payload: true\n    }\n}\nif (msg.topic == 'newSetting')\n{\n    newSettingMsg = \n    {\n        topic: 'newSetting',\n        payload: true\n    }\n};\nif (newData)\n{\n    newMsg = \n    {\n        topic: 'newData',\n        payload: true\n    }\n}\nif (alarmMsg != null ) newMsg = null;\nreturn [newMsg, newSettingMsg, alarmMsg];\n\nfunction getActionArray(tray, type, actionType)\n{\n    var actionArray = [];\n    var keys = Object.keys(tray);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (tray[keys[ii]].hasOwnProperty('type'))\n        {\n            if (tray[keys[ii]].type == type)\n            {\n                if (tray[keys[ii]].action == actionType)\n                {\n                    actionArray.push(tray[keys[ii]]);\n                }\n            }\n        }\n    }\n    return actionArray;\n}\nfunction scalarAlarmScan(tray, actionType)\n{\n    var alarmFlag = false;\n    var actionArray = getActionArray(tray, 'scalar', actionType);\n    if (actionArray.length > 0)\n    {\n        for (var ii = 0; ii < actionArray.length; ++ii)\n        {\n            let oldAlarmValue = actionArray[ii].alarm.value;\n            actionArray[ii].alarm.value = 0;\n            if (!isNaN(actionArray[ii].value))\n            {\n                if (actionArray[ii].value <= actionArray[ii].alarm.limits.low)  actionArray[ii].alarm.value = 1;\n                if (actionArray[ii].value <= actionArray[ii].alarm.limits.lolo) actionArray[ii].alarm.value = 3;\n                if (actionArray[ii].value >= actionArray[ii].alarm.limits.high) actionArray[ii].alarm.value = 2;\n                if (actionArray[ii].value >= actionArray[ii].alarm.limits.hihi) actionArray[ii].alarm.value = 4;\n                if (actionArray[ii].alarm.value != oldAlarmValue) alarmFlag = true;\n            }\n        }\n    }\n    return alarmFlag;\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.set('lastAlarm', -1);",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 640,
        "wires": [
            [
                "fb5938e1fc24f28a"
            ],
            [
                "bb0721ec29ac1fc3"
            ],
            [
                "3505912082a4802f"
            ]
        ]
    },
    {
        "id": "30326273a0d1c7c6",
        "type": "inject",
        "z": "ced4605f7f43ccc7",
        "name": "read Status",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": "8",
        "topic": "readTable",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 640,
        "wires": [
            [
                "2438b5ab6af05f37"
            ]
        ]
    },
    {
        "id": "3b8ece14ab638591",
        "type": "link out",
        "z": "ced4605f7f43ccc7",
        "name": "New Setting In",
        "links": [
            "b5c4b76499e82ed6"
        ],
        "x": 795,
        "y": 140,
        "wires": []
    },
    {
        "id": "b5c4b76499e82ed6",
        "type": "link in",
        "z": "ced4605f7f43ccc7",
        "name": "blinkybus setting in",
        "links": [
            "3b8ece14ab638591"
        ],
        "x": 95,
        "y": 380,
        "wires": [
            [
                "b9ebdfaf96e02c46"
            ]
        ]
    },
    {
        "id": "b7c599827db76d43",
        "type": "switch",
        "z": "ced4605f7f43ccc7",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "setting",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ping",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "config",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "reset",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 690,
        "y": 200,
        "wires": [
            [
                "3b8ece14ab638591"
            ],
            [
                "691aeb1e897c2f2a"
            ],
            [
                "325c574969277b05"
            ],
            [
                "10e6dcae49ccabd1"
            ]
        ]
    },
    {
        "id": "52ad908f43787cc1",
        "type": "function",
        "z": "ced4605f7f43ccc7",
        "name": "Filter MQTT",
        "func": "return {topic:msg.topic.split('/')[4], payload:msg.payload};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 200,
        "wires": [
            [
                "b7c599827db76d43"
            ]
        ]
    },
    {
        "id": "2438b5ab6af05f37",
        "type": "function",
        "z": "ced4605f7f43ccc7",
        "name": "Read BlinkyBus",
        "func": "if (global.get('settingInProgress')) return null;\nif (global.get('deviceInit') != 0) return null;\nreturn {topic: \"readStatus\", payload:true, timeStamp:msg.payload};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 640,
        "wires": [
            [
                "53eafe789fc78eb9"
            ]
        ]
    },
    {
        "id": "6691384fe11680b2",
        "type": "function",
        "z": "ced4605f7f43ccc7",
        "name": "Publish tray",
        "func": "if (!msg.payload) return null;\nvar tray = global.get('tray');\nvar newMsg = \n{\n    topic: global.get('trayProps').box + '/' + global.get('trayProps').type + '/' + global.get('trayProps').name + '/reading',\n    payload: JSON.stringify(tray)\n};\nreturn  newMsg;  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 340,
        "wires": [
            [
                "b95d89a21dc54825"
            ]
        ]
    },
    {
        "id": "f6fc1673e89bcad8",
        "type": "link in",
        "z": "ced4605f7f43ccc7",
        "name": "Publish Tray In",
        "links": [
            "0bf699584a2609d5",
            "fd4378376976106f",
            "6af21e76e0c4ad80",
            "86aff585d6d97f09",
            "691aeb1e897c2f2a",
            "55c12a1029ce3498",
            "852dc3a47adf83ec",
            "f0c1e263384a520f",
            "fb5938e1fc24f28a",
            "3fc0261f194a7067",
            "396e4a58f43bbdef"
        ],
        "x": 995,
        "y": 340,
        "wires": [
            [
                "6691384fe11680b2"
            ]
        ]
    },
    {
        "id": "fb5938e1fc24f28a",
        "type": "link out",
        "z": "ced4605f7f43ccc7",
        "name": "Alarm Scan out",
        "links": [
            "f6fc1673e89bcad8",
            "05c0c7b4f59ca88d"
        ],
        "x": 1095,
        "y": 600,
        "wires": []
    },
    {
        "id": "691aeb1e897c2f2a",
        "type": "link out",
        "z": "ced4605f7f43ccc7",
        "name": "Ping Out",
        "links": [
            "f6fc1673e89bcad8",
            "05c0c7b4f59ca88d"
        ],
        "x": 795,
        "y": 180,
        "wires": []
    },
    {
        "id": "55c12a1029ce3498",
        "type": "link out",
        "z": "ced4605f7f43ccc7",
        "name": "Create Setting out",
        "links": [
            "f6fc1673e89bcad8",
            "05c0c7b4f59ca88d"
        ],
        "x": 395,
        "y": 380,
        "wires": []
    },
    {
        "id": "57bd316e40d36fa4",
        "type": "split",
        "z": "ced4605f7f43ccc7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1470,
        "y": 60,
        "wires": [
            [
                "c16da043298f3080"
            ]
        ]
    },
    {
        "id": "c16da043298f3080",
        "type": "delay",
        "z": "ced4605f7f43ccc7",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1620,
        "y": 60,
        "wires": [
            [
                "568408b404e1efa2"
            ]
        ]
    },
    {
        "id": "325c574969277b05",
        "type": "link out",
        "z": "ced4605f7f43ccc7",
        "name": "Config Out",
        "links": [
            "59d57596ae90e11c"
        ],
        "x": 795,
        "y": 220,
        "wires": []
    },
    {
        "id": "59d57596ae90e11c",
        "type": "link in",
        "z": "ced4605f7f43ccc7",
        "name": "Pause Tray Readings in",
        "links": [
            "325c574969277b05"
        ],
        "x": 95,
        "y": 520,
        "wires": [
            [
                "119b4fcf61f00b4d"
            ]
        ]
    },
    {
        "id": "713eff36bb46984b",
        "type": "function",
        "z": "ced4605f7f43ccc7",
        "name": "Save config file",
        "func": "let cubeAlarm = global.get('tray')[msg.payload.cube].alarm;\ncubeAlarm.limits.lolo = msg.payload.limits.lolo;\ncubeAlarm.limits.low  = msg.payload.limits.low;\ncubeAlarm.limits.high = msg.payload.limits.high;\ncubeAlarm.limits.hihi = msg.payload.limits.hihi;\ncubeAlarm.notify.name = msg.payload.notify.name;\ncubeAlarm.notify.number = msg.payload.notify.number;\nreturn {topic:'trayConfigCompleted', payload:true};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 520,
        "wires": [
            [
                "e939cf19d52d0d60",
                "65edbd2f295993f2"
            ]
        ]
    },
    {
        "id": "a77228c00cda9a05",
        "type": "function",
        "z": "ced4605f7f43ccc7",
        "name": "Continue Tray readings",
        "func": "global.set('settingInProgress',false)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 520,
        "wires": [
            [
                "852dc3a47adf83ec"
            ]
        ]
    },
    {
        "id": "60e50d075baaafc0",
        "type": "link in",
        "z": "ced4605f7f43ccc7",
        "name": "Save Settings to file in",
        "links": [
            "6af21e76e0c4ad80",
            "65edbd2f295993f2",
            "fd4378376976106f",
            "75aab98047eea696",
            "344a2a68c26672b2",
            "bb0721ec29ac1fc3"
        ],
        "x": 995,
        "y": 420,
        "wires": [
            [
                "0de98d6dbdf192c6"
            ]
        ]
    },
    {
        "id": "852dc3a47adf83ec",
        "type": "link out",
        "z": "ced4605f7f43ccc7",
        "name": "Continue Devie Readings out",
        "links": [
            "f6fc1673e89bcad8",
            "05c0c7b4f59ca88d"
        ],
        "x": 1055,
        "y": 520,
        "wires": []
    },
    {
        "id": "c3e817bc0c16f5ac",
        "type": "inject",
        "z": "ced4605f7f43ccc7",
        "name": "Archive clock",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "20",
        "topic": "archiveClock",
        "payloadType": "date",
        "x": 180,
        "y": 780,
        "wires": [
            [
                "1cda379990d1fb1f"
            ]
        ]
    },
    {
        "id": "1cda379990d1fb1f",
        "type": "function",
        "z": "ced4605f7f43ccc7",
        "name": "Archive Pulse",
        "func": "var tray = global.get('tray');\nvar lastArchive = context.get('lastArchive');\nvar now = new Date().getTime();\nif ((now - lastArchive) <= tray.arcPeriod) return null;\ncontext.set('lastArchive', now);\nreturn {topic:'archivePulse', payload:true};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.set('lastArchive', new Date().getTime());",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "10e6dcae49ccabd1",
        "type": "link out",
        "z": "ced4605f7f43ccc7",
        "name": "Reset Out",
        "links": [
            "ed34cd8947d4dabe"
        ],
        "x": 795,
        "y": 260,
        "wires": []
    },
    {
        "id": "ed34cd8947d4dabe",
        "type": "link in",
        "z": "ced4605f7f43ccc7",
        "name": "Reset in",
        "links": [
            "10e6dcae49ccabd1"
        ],
        "x": 95,
        "y": 1260,
        "wires": [
            [
                "23883ac6e5fe4535"
            ]
        ]
    },
    {
        "id": "fd4378376976106f",
        "type": "link out",
        "z": "ced4605f7f43ccc7",
        "name": "nonBlinkybusSetting Out",
        "mode": "link",
        "links": [
            "60e50d075baaafc0",
            "f6fc1673e89bcad8",
            "05c0c7b4f59ca88d"
        ],
        "x": 395,
        "y": 420,
        "wires": []
    },
    {
        "id": "60af8515de59960f",
        "type": "function",
        "z": "ced4605f7f43ccc7",
        "name": "Allow Readings",
        "func": "if (msg.payload.address == -1)\n{\n    global.set('settingInProgress',false);\n    global.set('deviceInit', 0);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2100,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "2b873a86d0a11118",
        "type": "link out",
        "z": "ced4605f7f43ccc7",
        "name": "begin re-init device",
        "mode": "link",
        "links": [
            "80b87787217f36e7"
        ],
        "x": 895,
        "y": 1020,
        "wires": []
    },
    {
        "id": "80b87787217f36e7",
        "type": "link in",
        "z": "ced4605f7f43ccc7",
        "name": "read tray config in",
        "links": [
            "2b873a86d0a11118"
        ],
        "x": 975,
        "y": 100,
        "wires": [
            [
                "73cc1daeb7f5cd49"
            ]
        ]
    },
    {
        "id": "a8f6b910ef4448ca",
        "type": "function",
        "z": "ced4605f7f43ccc7",
        "name": "Save flow env variables",
        "func": "global.set(msg.topic,msg.payload);\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1120,
        "wires": []
    },
    {
        "id": "3f8034f1c18fe673",
        "type": "inject",
        "z": "ced4605f7f43ccc7",
        "name": "serialBufSize",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "serialBufSize",
        "payload": "SERIALBUFSIZE",
        "payloadType": "env",
        "x": 170,
        "y": 1120,
        "wires": [
            [
                "a8f6b910ef4448ca"
            ]
        ]
    },
    {
        "id": "f22030c71ba99863",
        "type": "function",
        "z": "ced4605f7f43ccc7",
        "name": "Send Setting",
        "func": "global.set('settingInProgress',true);\nvar bufsize = 4;\nvar buffer = new ArrayBuffer(bufsize);\nvar settingsView = new DataView(buffer);\nsettingsView.setUint8(0, 1, true); //setting\nsettingsView.setUint8(1, msg.payload.address, true); //address\nsettingsView.setInt16(2, msg.payload.value, true); //value\nreturn {topic:'setting',payload:Buffer.from(buffer),address:msg.payload.address};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 960,
        "wires": [
            [
                "712f15d6eb4b538f"
            ]
        ]
    },
    {
        "id": "0557e0883ce98c92",
        "type": "function",
        "z": "ced4605f7f43ccc7",
        "name": "Get Reading",
        "func": "var bufsize = 4;\nvar buffer = new ArrayBuffer(bufsize);\nvar settingsView = new DataView(buffer);\nsettingsView.setUint8(0, 0, true); //setting\nsettingsView.setUint8(1, 0, true); //address\nsettingsView.setInt16(2, 0, true); //value\n\nreturn {topic:'reading',payload:Buffer.from(buffer),timeStamp:msg.timeStamp};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1040,
        "wires": [
            [
                "712f15d6eb4b538f"
            ]
        ]
    },
    {
        "id": "ea606d07f54e1460",
        "type": "function",
        "z": "ced4605f7f43ccc7",
        "name": "Check Reading",
        "func": "var serialBufSize = global.get('serialBufSize');\nvar dataView     = new DataView(new ArrayBuffer(2));\nvar dataBuffer = [];\nfor (var ii = 0; ii < (msg.payload.length / 2); ++ii)\n{\n    for (ib = 0; ib < 2; ++ib)   dataView.setUint8(ib, msg.payload[(ii * 2) + 1 - ib]);\n    dataBuffer.push( dataView.getInt16(0));\n}\nvar topic = 'newReading';\nif (global.get('settingInProgress'))\n{\n    topic = 'newSetting';\n    if (global.get('deviceInit') < 1);\n        global.set('settingInProgress', false)\n}\nglobal.get('tray').timeStamp = new Date().getTime();\nif (dataBuffer[0] == 1)\n{\n    var initDeviceMsg = {topic:\"initDevice\",payload:true};\n    global.set('settingInProgress', true)\n    global.set('deviceInit', 2);\n    return [null, initDeviceMsg];\n}\nreturn [{topic:topic, payload:dataBuffer},null];\n\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1000,
        "wires": [
            [
                "57beba21bc1ead28"
            ],
            [
                "2b873a86d0a11118"
            ]
        ]
    },
    {
        "id": "c97587d9c5dff20b",
        "type": "link in",
        "z": "ced4605f7f43ccc7",
        "name": "BlinkyBus Setting In",
        "links": [
            "01598091ca19387c",
            "b01e17054232f349",
            "feed050eab82310e"
        ],
        "x": 95,
        "y": 960,
        "wires": [
            [
                "f22030c71ba99863"
            ]
        ]
    },
    {
        "id": "ef37d056522cc994",
        "type": "link in",
        "z": "ced4605f7f43ccc7",
        "name": "BlinkyBus Reading In",
        "links": [
            "6238aa4113faa347",
            "53eafe789fc78eb9"
        ],
        "x": 95,
        "y": 1040,
        "wires": [
            [
                "0557e0883ce98c92"
            ]
        ]
    },
    {
        "id": "57beba21bc1ead28",
        "type": "link out",
        "z": "ced4605f7f43ccc7",
        "name": "BlinkyBus Reading Out",
        "mode": "link",
        "links": [
            "a3d99d9c796d9231",
            "e0d65b4c18b2a02d"
        ],
        "x": 895,
        "y": 980,
        "wires": []
    },
    {
        "id": "b01e17054232f349",
        "type": "link out",
        "z": "ced4605f7f43ccc7",
        "name": "Init device setting in",
        "mode": "link",
        "links": [
            "c97587d9c5dff20b"
        ],
        "x": 1875,
        "y": 60,
        "wires": []
    },
    {
        "id": "53eafe789fc78eb9",
        "type": "link out",
        "z": "ced4605f7f43ccc7",
        "name": "Poll BlinkBus In",
        "mode": "link",
        "links": [
            "ef37d056522cc994"
        ],
        "x": 455,
        "y": 640,
        "wires": []
    },
    {
        "id": "e0d65b4c18b2a02d",
        "type": "link in",
        "z": "ced4605f7f43ccc7",
        "name": "Poll BlinkBus Out",
        "links": [
            "57beba21bc1ead28"
        ],
        "x": 555,
        "y": 640,
        "wires": [
            [
                "071e8c2c6b73ea9c"
            ]
        ]
    },
    {
        "id": "feed050eab82310e",
        "type": "link out",
        "z": "ced4605f7f43ccc7",
        "name": "Tray Setting In",
        "mode": "link",
        "links": [
            "c97587d9c5dff20b"
        ],
        "x": 555,
        "y": 340,
        "wires": []
    },
    {
        "id": "b66e93c6fa747601",
        "type": "delay",
        "z": "ced4605f7f43ccc7",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1330,
        "y": 60,
        "wires": [
            [
                "57bd316e40d36fa4"
            ]
        ]
    },
    {
        "id": "568408b404e1efa2",
        "type": "switch",
        "z": "ced4605f7f43ccc7",
        "name": "",
        "property": "payload.address",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "-1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1770,
        "y": 60,
        "wires": [
            [
                "b01e17054232f349"
            ],
            [
                "b8e7403f86b35123"
            ]
        ]
    },
    {
        "id": "b8e7403f86b35123",
        "type": "delay",
        "z": "ced4605f7f43ccc7",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1920,
        "y": 120,
        "wires": [
            [
                "60af8515de59960f"
            ]
        ]
    },
    {
        "id": "45b77ec170e1042c",
        "type": "inject",
        "z": "ced4605f7f43ccc7",
        "name": "pm2Name",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "pm2Name",
        "payload": "PM2NAME",
        "payloadType": "env",
        "x": 170,
        "y": 1180,
        "wires": [
            [
                "a8f6b910ef4448ca"
            ]
        ]
    },
    {
        "id": "b68a53a1df8d8118",
        "type": "function",
        "z": "ced4605f7f43ccc7",
        "name": "Get pm2Name",
        "func": "msg.payload = global.get(\"pm2Name\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1240,
        "wires": [
            [
                "ae57cbb2461ea482"
            ]
        ]
    },
    {
        "id": "2161ea126a22379b",
        "type": "inject",
        "z": "ced4605f7f43ccc7",
        "name": "Archive now",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "archiveNow",
        "payloadType": "date",
        "x": 170,
        "y": 840,
        "wires": [
            [
                "48916e2e5f148020"
            ]
        ]
    },
    {
        "id": "48916e2e5f148020",
        "type": "function",
        "z": "ced4605f7f43ccc7",
        "name": "Single Archive Pulse",
        "func": "return {topic:'archivePulse', payload:true};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.set('lastArchive', new Date().getTime());",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 840,
        "wires": [
            [
                "3e76efde8a750c72"
            ]
        ]
    },
    {
        "id": "65edbd2f295993f2",
        "type": "link out",
        "z": "ced4605f7f43ccc7",
        "name": "Save config file out",
        "links": [
            "60e50d075baaafc0"
        ],
        "x": 755,
        "y": 480,
        "wires": []
    },
    {
        "id": "453e5e1ec47f943c",
        "type": "delay",
        "z": "ced4605f7f43ccc7",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 450,
        "y": 340,
        "wires": [
            [
                "feed050eab82310e"
            ]
        ]
    },
    {
        "id": "e939cf19d52d0d60",
        "type": "delay",
        "z": "ced4605f7f43ccc7",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 720,
        "y": 520,
        "wires": [
            [
                "a77228c00cda9a05"
            ]
        ]
    },
    {
        "id": "02957088ba67be26",
        "type": "delay",
        "z": "ced4605f7f43ccc7",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 520,
        "wires": [
            [
                "713eff36bb46984b"
            ]
        ]
    },
    {
        "id": "119b4fcf61f00b4d",
        "type": "function",
        "z": "ced4605f7f43ccc7",
        "name": "Pause Readings",
        "func": "global.set('settingInProgress',true)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 520,
        "wires": [
            [
                "02957088ba67be26"
            ]
        ]
    },
    {
        "id": "20e4c9a711fcd2a9",
        "type": "mqtt out",
        "z": "ced4605f7f43ccc7",
        "name": "Publish Archive",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "cf9f84d0.6fba78",
        "x": 800,
        "y": 780,
        "wires": []
    },
    {
        "id": "3e76efde8a750c72",
        "type": "function",
        "z": "ced4605f7f43ccc7",
        "name": "Publish tray",
        "func": "if (!msg.payload) return null;\nvar tray = global.get('tray');\nvar newMsg = \n{\n    topic: global.get('trayProps').box + '/' + global.get('trayProps').type + '/' + global.get('trayProps').name + '/archive',\n    payload: JSON.stringify(tray)\n};\nreturn  newMsg;  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 780,
        "wires": [
            [
                "20e4c9a711fcd2a9"
            ]
        ]
    },
    {
        "id": "3505912082a4802f",
        "type": "function",
        "z": "ced4605f7f43ccc7",
        "name": "Alarm changed",
        "func": "if (!msg.payload) return null;\nvar tray = global.get('tray');\nvar newMsg = \n{\n    topic: global.get('trayProps').box + '/' + global.get('trayProps').type + '/' + global.get('trayProps').name + '/reading',\n    payload: JSON.stringify(tray)\n};\nreturn  newMsg;  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 680,
        "wires": [
            [
                "1497871f0ff6a09c"
            ]
        ]
    },
    {
        "id": "1497871f0ff6a09c",
        "type": "mqtt out",
        "z": "ced4605f7f43ccc7",
        "name": "QoS = 1",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "cf9f84d0.6fba78",
        "x": 1320,
        "y": 680,
        "wires": []
    },
    {
        "id": "712f15d6eb4b538f",
        "type": "serial out",
        "z": "ced4605f7f43ccc7",
        "name": "BlinkyBus Out",
        "serial": "4381096bc94740bd",
        "x": 390,
        "y": 1000,
        "wires": []
    },
    {
        "id": "6cbe9e7e163c78ff",
        "type": "serial in",
        "z": "ced4605f7f43ccc7",
        "name": "BlinkyBus In",
        "serial": "4381096bc94740bd",
        "x": 570,
        "y": 1000,
        "wires": [
            [
                "ea606d07f54e1460"
            ]
        ]
    },
    {
        "id": "bb0721ec29ac1fc3",
        "type": "link out",
        "z": "ced4605f7f43ccc7",
        "name": "New Setting Out",
        "mode": "link",
        "links": [
            "60e50d075baaafc0"
        ],
        "x": 1095,
        "y": 640,
        "wires": []
    },
    {
        "id": "73cc1daeb7f5cd49",
        "type": "function",
        "z": "ced4605f7f43ccc7",
        "g": "6ac7997fd43294c1",
        "name": "Init Gizmo",
        "func": "var tray = global.get('tray');\nvar deviceInit = global.get('deviceInit');\nif (deviceInit == 1) //tray rebooted\n{\n    var msgs = [];\n    msgs[0] = {\"address\":0,\"value\":0};\n    //must be the last!\n    msgs[1] = {\"address\":-1,\"value\":0};\n    return {topic : 'initCube', payload: msgs};\n}\nif (deviceInit == 2) //device rebooted\n{\n    var msgs = [];\n    msgs[0] = {\"address\":0,\"value\":0};\n    //must be the last!\n    msgs[1] = {\"address\":-1,\"value\":0};\n    return {topic : 'initCube', payload: msgs};\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 60,
        "wires": [
            [
                "b66e93c6fa747601"
            ]
        ]
    },
    {
        "id": "071e8c2c6b73ea9c",
        "type": "function",
        "z": "ced4605f7f43ccc7",
        "g": "2d343c91aee43564",
        "name": "Create Readings",
        "func": "let tray = global.get('tray');\nlet timeStamp = new Date(0);\ntimeStamp.setUTCFullYear(msg.payload[1] + 2000);\ntimeStamp.setUTCMonth(msg.payload[2]  - 1);\ntimeStamp.setUTCDate(msg.payload[3]);\ntimeStamp.setUTCHours(msg.payload[4]);\ntimeStamp.setUTCMinutes(msg.payload[5]);\ntimeStamp.setUTCSeconds(msg.payload[6]);\ntimeStamp.setTime(timeStamp.getTime() -3600000);\nlet energy = msg.payload[10];\nenergy = energy + 1000 * msg.payload[9];\nenergy = energy + 1000 * 1000 * msg.payload[8];\nenergy = energy + 1000 * 1000 * 1000* msg.payload[7];\n\nlet energyReading = {timeStamp:timeStamp.getTime(),energy:energy};\nlet power = 0;\nlet energyReadingArray = context.get('energyReadingArray');\nif (energyReadingArray.length < 1)\n{\n    energyReadingArray.push(energyReading);\n}\nelse\n{\n    if (energyReading.timeStamp > energyReadingArray[energyReadingArray.length - 1].timeStamp)\n    {\n        energyReadingArray.push(energyReading);\n        if ((energyReading.timeStamp - energyReadingArray[0].timeStamp) > 600000)\n        {\n            energyReadingArray.shift();\n        }\n    }\n    let deltaE = energyReading.energy - energyReadingArray[0].energy;\n    let deltaT = (energyReading.timeStamp - energyReadingArray[0].timeStamp) / 3600000;\n    power = Math.round(deltaE / deltaT) / 1000; //in kW\n}\ntray.meterTimeStamp = timeStamp.getTime();\ntray.power.value = power;\ntray.meterReading.value = energy;\nlet archiveMessage = null\nlastArchiveTimeStamp = context.get('lastArchiveTimeStamp');\nif (msg.payload[5] == 0)\n{\n    if ((timeStamp.getTime() - lastArchiveTimeStamp) > 120000)\n    {\n        archiveMessage = {topic:'archiveNow', payload:true};\n        context.set('lastArchiveTimeStamp',timeStamp.getTime());\n    }\n}\n\nreturn  [{topic:msg.topic, payload:true}, archiveMessage];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.set('energyReadingArray',[]);\ncontext.set('lastArchiveTimeStamp',-1);",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 640,
        "wires": [
            [
                "8567c54a7e8bed3d"
            ],
            [
                "48916e2e5f148020"
            ]
        ]
    },
    {
        "id": "b9ebdfaf96e02c46",
        "type": "function",
        "z": "ced4605f7f43ccc7",
        "g": "24510592c5eccdb9",
        "name": "Create Setting",
        "func": "var tray = global.get('tray');\nvar blinkyBusSettingMsg = \n{\n    topic : msg.topic, \n    payload : { value: msg.payload.value,  'address': -1  } \n}\nvar blinkyBusMessage = false;\nswitch(msg.payload.cube)\n{\n    case 'nonblinkyBusSetting':\n        tray.nonblinkyBusSetting.value  = msg.payload.value;\n        blinkyBusMessage = false;\n        break;\n    default:\n        break;\n}\nvar msgArray = [null,null,null];\nif (blinkyBusMessage)\n{\n    global.set('settingInProgress',true);\n    var settingInProgressMsg = {topic:'settingInProgress', payload:true};\n    msgArray = [blinkyBusSettingMsg, settingInProgressMsg, null];\n    \n}\nelse\n{\n    global.set('settingInProgress',false);\n    msgArray = [null,null,{topic:'settingDone', payload:true}];\n}\nreturn msgArray;",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 380,
        "wires": [
            [
                "453e5e1ec47f943c"
            ],
            [
                "55c12a1029ce3498"
            ],
            [
                "fd4378376976106f"
            ]
        ]
    }
]